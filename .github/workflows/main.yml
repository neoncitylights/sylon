name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: build (Node v@${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build packages
        run: npm run build

  lint:
    name: lint (${{ matrix.tool }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tool: ESLint
            npm-cmd-suffix: es
            npm-cmd-env: |
              npm run lint:es-env
          - tool: Markdownlint
            npm-cmd-suffix: md
            npm-cmd-env: |
              node --version
              npm --version
              npm run lint:md-env
          - tool: publint
            npm-cmd-suffix: pub
            npm-cmd-env: |
              node --version
              npm --version
              npm run lint:pub-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Print environment info
        run: |
          ${{ matrix.npm-cmd-env }}
      - name: Lint with ${{ matrix.tool }}
        run: npm run lint:${{ matrix.npm-cmd-suffix }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  pkg-dry-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Check if publishable
        run: npm publish --access public --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  ci-success:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs:
      - build
      - lint
      - test
      - pkg-dry-run
    steps:
      - name: âœ… CI succeeded
        run: exit 0
